inicial = paste(i, '-10-01', sep = '')
final = paste(i, '-12-31', sep = '')
}
qi = length(subset(data, subset =
ICAO == aerodromo &
data >= inicial &
data <= final))
print(paste(i, paste('Q', j, sep=''), 'Colisões=', qi, sep=' '))
j = j + 1
}
i = i + 1
}
}
#Função para contar colisões por segmento da aviação
segmento <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-12-31', sep = '')
a1 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Regular' &
data >= inicial &
data <= final))
print(paste(i, 'Regular', 'Colisões=', a1, sep=' '))
a2 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Geral' &
data >= inicial &
data <= final))
print(paste(i, 'Geral', 'Colisões=', a2, sep=' '))
a3 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo %in% c('FAB','Marinha','ExÃ©rcito') &
data >= inicial &
data <= final))
print(paste(i, 'Militar', 'Colisões=', a3, sep=' '))
i = i + 1
}
}
#carrega biblioteca para ler dados
library(readr)
#carrega o arquivo de dados
risco_fauna <- read_csv("~/Downloads/risco_fauna.csv",
col_types = cols(Fase_do_Voo = col_character(),
HoraLocal = col_time(format = "%H:%M"),
data = col_date(format = "%Y-%m-%d")))
names(risco_fauna)
attach(risco_fauna)
#função para contar colisões por trimestre
#para obter dados do SBBE use > quadrimestre('SBBE')
quadrimestre <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
j = 1
while(j <= 4){
if(j==1){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-03-31', sep = '')
}
else if(j==2){
inicial = paste(i, '-04-01', sep = '')
final = paste(i, '-06-30', sep = '')
}
else if(j==3){
inicial = paste(i, '-07-01', sep = '')
final = paste(i, '-09-30', sep = '')
}
else{
inicial = paste(i, '-10-01', sep = '')
final = paste(i, '-12-31', sep = '')
}
qi = length(subset(data, subset =
ICAO == aerodromo &
data >= inicial &
data <= final))
print(paste(i, paste('Q', j, sep=''), 'Colisões=', qi, sep=' '))
j = j + 1
}
i = i + 1
}
}
#Função para contar colisões por segmento da aviação
#para obter dados do SBBE use > segmento('SBBE')
segmento <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-12-31', sep = '')
a1 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Regular' &
data >= inicial &
data <= final))
print(paste(i, 'Regular', 'Colisões=', a1, sep=' '))
a2 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Geral' &
data >= inicial &
data <= final))
print(paste(i, 'Geral', 'Colisões=', a2, sep=' '))
a3 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo %in% c('FAB','Marinha','ExÃ©rcito') &
data >= inicial &
data <= final))
print(paste(i, 'Militar', 'Colisões=', a3, sep=' '))
i = i + 1
}
}
#carrega biblioteca para ler dados
library(readr)
#carrega o arquivo de dados
risco_fauna <- read_csv("~/Downloads/risco_fauna.csv",
col_types = cols(Fase_do_Voo = col_character(),
HoraLocal = col_time(format = "%H:%M"),
data = col_date(format = "%Y-%m-%d")))
names(risco_fauna)
attach(risco_fauna)
#função para contar colisões por trimestre
#para obter dados do SBBE use > quad('SBBE')
quad <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
j = 1
while(j <= 4){
if(j==1){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-03-31', sep = '')
}
else if(j==2){
inicial = paste(i, '-04-01', sep = '')
final = paste(i, '-06-30', sep = '')
}
else if(j==3){
inicial = paste(i, '-07-01', sep = '')
final = paste(i, '-09-30', sep = '')
}
else{
inicial = paste(i, '-10-01', sep = '')
final = paste(i, '-12-31', sep = '')
}
qi = length(subset(data, subset =
ICAO == aerodromo &
data >= inicial &
data <= final))
print(paste(i, paste('Q', j, sep=''), 'Colisões=', qi, sep=' '))
j = j + 1
}
i = i + 1
}
}
#Função para contar colisões por segmento da aviação
#para obter dados do SBBE use > seg('SBBE')
seg <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-12-31', sep = '')
a1 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Regular' &
data >= inicial &
data <= final))
print(paste(i, 'Regular', 'Colisões=', a1, sep=' '))
a2 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Geral' &
data >= inicial &
data <= final))
print(paste(i, 'Geral', 'Colisões=', a2, sep=' '))
a3 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo %in% c('FAB','Marinha','ExÃ©rcito') &
data >= inicial &
data <= final))
print(paste(i, 'Militar', 'Colisões=', a3, sep=' '))
i = i + 1
}
}
quad(SBBE)
quad('SBBE')
quad('SBGR')
seg('SBGR')
clear()
cl()
quad('SBBE')
#carrega biblioteca para ler dados
library(readr)
#carrega o arquivo de dados
risco_fauna <- read_csv("~/Downloads/risco_fauna.csv",
col_types = cols(Fase_do_Voo = col_character(),
HoraLocal = col_time(format = "%H:%M"),
data = col_date(format = "%Y-%m-%d")))
names(risco_fauna)
attach(risco_fauna)
#função para contar colisões por trimestre
#para obter dados do SBBE use > quad('SBBE')
quad <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
j = 1
while(j <= 4){
if(j==1){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-03-31', sep = '')
}
else if(j==2){
inicial = paste(i, '-04-01', sep = '')
final = paste(i, '-06-30', sep = '')
}
else if(j==3){
inicial = paste(i, '-07-01', sep = '')
final = paste(i, '-09-30', sep = '')
}
else{
inicial = paste(i, '-10-01', sep = '')
final = paste(i, '-12-31', sep = '')
}
qi = length(subset(data, subset =
ICAO == aerodromo &
data >= inicial &
data <= final))
print(paste(i, paste('Q', j, sep=''), 'Colisões=', qi, sep=' '))
j = j + 1
}
i = i + 1
print('---')
}
}
#Função para contar colisões por segmento da aviação
#para obter dados do SBBE use > seg('SBBE')
seg <- function(a){
aerodromo = a
i = 2010
while(i <= 2015){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-12-31', sep = '')
a1 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Regular' &
data >= inicial &
data <= final))
print(paste(i, 'Regular', 'Colisões=', a1, sep=' '))
a2 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo == 'Geral' &
data >= inicial &
data <= final))
print(paste(i, 'Geral', 'Colisões=', a2, sep=' '))
a3 = length(subset(data, subset =
ICAO == aerodromo &
aviacaoTipo %in% c('FAB','Marinha','ExÃ©rcito') &
data >= inicial &
data <= final))
print(paste(i, 'Militar', 'Colisões=', a3, sep=' '))
i = i + 1
print('---')
}
}
quad('SBBE')
seg('SBBE')
quad('SBBH')
seg('SBBH')
quad('SBBR')
seg('SBBR')
quad('SBCF')
seg('SBCF')
quad('SBCG')
seg('SBCG')
quad('SBCT')
seg('SBCT')
quad('SBEG')
seg('SBEG')
quad('SBFI')
seg('SBFi')
seg('SBFI')
quad('SBFL')
seg('SBFL')
quad('SBFZ')
seg('SBFZ')
quad('SBGL')
seg('SBGL')
seg('SBGO')
quad('SBGO')
quad('SBGR')
seg('SBGR')
quad('SBJR')
seg('SBJR')
quad('SBKP')
seg('SBKP')
quad('SBLO')
seg('SBLO')
quad('SBMO')
seg('SBMO')
quad('SBMT')
seg('SBMT')
quad('SBNF')
seg('SBNF')
quad('SBPA')
seg('SBPA')
quad('SBRF')
seg('SBRF')
quad('SBRJ')
seg('SBRJ')
quad('SBRP')
qseg('SBRP')
seg('SBRP')
quad('SBSJ')
seg('SBSJ')
quad('SBSL')
seg('SBSL')
quad('SBSP')
seg('SBSP')
quad('SBSV')
seg('SBSV')
quad('SBUL')
seg('SBUL')
quad('SBVT')
seg('SBVT')
#Função para contar colisões por segmento da aviação
#esta função coleta dados totais
seg_tot <- function(){
i = 2010
while(i <= 2015){
inicial = paste(i, '-01-01', sep = '')
final = paste(i, '-12-31', sep = '')
a1 = length(subset(data, subset =
aviacaoTipo == 'Regular' &
data >= inicial &
data <= final))
print(paste(i, 'Regular', 'Colisões=', a1, sep=' '))
a2 = length(subset(data, subset =
aviacaoTipo == 'Geral' &
data >= inicial &
data <= final))
print(paste(i, 'Geral', 'Colisões=', a2, sep=' '))
a3 = length(subset(data, subset =
aviacaoTipo %in% c('FAB','Marinha','ExÃ©rcito') &
data >= inicial &
data <= final))
print(paste(i, 'Militar', 'Colisões=', a3, sep=' '))
i = i + 1
print('---')
}
}
seg_tot()
View(risco_fauna)
str(data)
str(data, 2)
substr(data, 1, 5)
substr(data, 6, 7)
por_mes <- function(){
i = 1
while(i <= 12){
qi = length(subset(data, subset = substr(data, 6, 7) >= i))
print(paste('Mês 'i'', 'Colisões=', qi, sep=' '))
i = i + 1
}
}
por_mes <- function(){
i = 1
while(i <= 12){
qi = length(subset(data, subset = substr(data, 6, 7) >= i))
print(paste('Mês', i, 'Colisões=', qi, sep=' '))
i = i + 1
}
}
por_mes()
por_mes <- function(){
meses = c('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12')
for(i in meses){
qi = length(subset(data, subset = substr(data, 6, 7) >= i))
print(paste('Mês', i, 'Colisões=', qi, sep=' '))
}
}
por_mes()
install.packages("rticles", type = "source")
dim(cars)
cars
head(cars)
head(cars, 20)
summary(cars)
plot(cars)
cor(cars)
cor(cars)^2
modelo <- lm(cars$speed ~ cars$dist, data = cars)
modelo
plot(cars$speed ~ cars$dist, data=cars)
abline(modelo)
#distancia de parada = 22 pés
clear()
cl()
modelo$coefficients
modelo$coefficients[1]
modelo$coefficients[2]
modelo$coefficients[1] + modelo$coefficients[2] * 22
predict(modelo, 22)
predict(modelo, data.frame(cars$dist==22))
predict(modelo, data.frame(cars$dist=22))
predict(modelo, data.frame(dist=22))
predict(modelo, data.frame(cars$dist=22))
predict(modelo, cars$dist=22)
data.frame(frot=2)
modelo
predict(modelo, cars$dist=22)
predict(modelo, data.frame(cars$dist=22))
modelo = lm(speed ~ dist, data=cars)
modelo
predict(modelo, data.frame(dist=22))
predict(modelo, data.frame(dist=220))
library(readr)
library(tools) #capitalize texto
getwd()
directory <- "/home/cleibson/projetos/opendata_aig_brazil/script"
setwd(directory)
oco <- read_delim("../data/all.csv", "~", escape_double = FALSE, trim_ws = TRUE)
attach(oco)
paleta_cores=c("rosybrown3","gray69","palegoldenrod","paleturquoise3","palegreen2")
dia_compilacao = paste("Dados compilados em ", format(dia_extracao[1], format="%d/%m/%Y"))
graficolargura=800
graficoaltura=450
graficolargura1=600
graficoaltura1=350
graficolargura2=700
graficoaltura2=400
nomearquivo=paste("images/classificacao","001",".jpg",sep="_")
bmp(nomearquivo,width=graficolargura1,height=graficoaltura1)
barplot(table(ocorrencia_classificacao),
main = paste("Total de Ocorrências entre ",
substring(min(ocorrencia_dia), 1, 4),
"-",
substring(max(ocorrencia_dia), 1, 4)), #título do gráfico
col = rainbow(length(table(ocorrencia_classificacao))), #cores das barras
ylab = "Total de Ocorrências", #label do eixo y
cex.names = 0.8, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3,
space=0.5
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
ocorrencia_mes = substring(ocorrencia_dia, 6, 7)
ocorrencia_ano = substring(ocorrencia_dia, 1, 4)
temp_class = unique(ocorrencia_classificacao)
temp_ano = unique(ocorrencia_ano)
table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == 'ACIDENTE'))
table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == 'ACIDENTE' & ocorrencia_ano == '2006'))
sum(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == 'ACIDENTE' & ocorrencia_ano == '2006')))
for(i in temp_class){
nomearquivo = paste("images/por_mes_", tolower(i),".jpg", sep="")
bmp(nomearquivo,width=graficolargura1,height=graficoaltura1)
indice_cor = which(temp_class==i)  #captura o indice da palavra i
barplot(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i)),
main = paste("Total de ", toTitleCase(tolower(i)), "s", " por Mês entre ",
substring(min(ocorrencia_dia), 1, 4),
"-",
substring(max(ocorrencia_dia), 1, 4), sep=""), #título do gráfico
col = rep(rainbow(indice_cor)[indice_cor], length(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i)))), #cores das barras
ylab = paste("Total de ", toTitleCase(tolower(i)), "s", sep=""), #label do eixo y
xlab = "Mês", #label do eixo x
cex.names = 0.8, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3, #largura das barras
space=0.5 #espaço entre as barras
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
for(j in temp_ano){
nomearquivo = paste("images/por_mes_", tolower(i), "_ano_", j, ".jpg", sep="")
bmp(nomearquivo,width=graficolargura1,height=graficoaltura1)
barplot(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i & ocorrencia_ano == j)),
main = paste("Total de ", toTitleCase(tolower(i)), "s", " por Mês no Ano de ", j, sep=""), #título do gráfico
col = rep(rainbow(indice_cor)[indice_cor], length(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i)))), #cores das barras
ylab = paste("Total de ", toTitleCase(tolower(i)), "s", sep=""), #label do eixo y
xlab = "Mês", #label do eixo x
cex.names = 0.8, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3, #largura das barras
space=0.5 #espaço entre as barras
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
}
}
nomearquivo=paste("images/aeronave_tipo","001",".jpg",sep="_")
bmp(nomearquivo,width=graficolargura2, height=graficoaltura2)
barplot(sort(table(aeronave_equipamento), decreasing = TRUE),
main = paste("Total de Ocorrências por Tipo de Aeronave entre ",
substring(min(ocorrencia_dia), 1, 4),
"-",
substring(max(ocorrencia_dia), 1, 4)), #título do gráfico
col = rainbow(length(table(aeronave_equipamento))), #cores das barras
ylab = "Total de Ocorrências", #label do eixo y
xlab = "Tipo de Aeronave", #label do eixo x
cex.names = 0.7, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3,
space=0.5
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
