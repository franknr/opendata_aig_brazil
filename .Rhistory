head(cars, 10)
plot(cars)
typeof(cars)
model <- lm(speed ~ dist, data = cars)
model
model$coefficients
model$coefficients[1] + model$coefficients[2] * 25
predict(model, data.frame(dist=25))
model <- lm(speed ~ dist, data = cars)
model
model$coefficients
model$coefficients[1]
model$coefficients[2]
model$coefficients[1] + model$coefficients[2] * 25
predict(model, data.frame(dist=25))
summary(modelo)
summary(model)
model$residuals
model$fitted.values
plot(model$fitted.values)
abline(model)
plot(model)
model$coefficients
plot(speed ~ dist, data = cars)
abline(speed ~ dist, data = cars)
abline(model)
model$residuals
predict(model, data.frame(dist=25))
model$residuals
model$fitted.values
plot(model$fitted.values) #fitted values
abline(model)
par(mfrow = c(2, 2)
plot(model)
par(mfrow = c(2, 2))
plot(model)
data("mtcars")
dim(mtcars)
cor(mtcars[1:4])
model2 <- lm(mpg ~ disp, data = mtcars)
model2
summary(model2)
summary(model2)$r.squared
summary(model2)$adj.r.squared
plot(mpg ~disp, data=mtcars)
abline(model2)
predict(model2, data.frame(disp=200))
model3 <- lm(mpg ~ disp + hp + cyl, data=mtcars)
model3
summary(model3)
summary(model3)$r.squared
summary(model3)$adj.r.squared
predict(model3)
predict(model3, data.frame(disp=200, hp=100, cyl=4))
cars$mpg
cars
mtcars$mpg
mtcars
plot(model3)
idade <-c(23,34,56)
peso <- scan()
peso
prod(peso)
length(idade)
nomes <- ('Jorge', 'Pedro', 'Marcos')
nomes <- ("Jorge", "Pedro", "Marcos")
nomes <- c("Jorge", "Pedro", "Marcos")
length(nomes)
idade <- c(23,34,56,45,34,23,23,34)
idade[3]
idade[c(2,4,7)] #acessa o quarto, segundo e sétimo
idade[3:5] <- c(23,45,89)
idade[-2] #remove o segundo elemento
length(idade)
idade[9] <- 56 #adiciona um novo valor no indice 9 do vetor
length(idade)
idade + 2
idade + 2
idade - 2
idade * 2
idade / 2
prod(idade)
idade^2
sqrt(idade)
idade2 <- idade * 2
idade + idade2
sin(idade)
cos(idade)
max(idade)
min(idade)
sort(idade)
sort(idade, decreasing = FALSE)
sort(idade, decreasing = TRUE)
idade < idade2
min(idade) < min(idade2)
idade == idade2
idade[3]==idade2[8]
idade[3]
idade[3]=90
idade2[8]=90
idade[3]==idade2[8]
idade==idade2
idade2[3]=90
idade[3]=90
idade2[3]=90
idade[3]==idade2[3]
idade==idade2
union(idade, idade2)
length(union(idade, idade2))
intersect(idade, idade2)
setdiff(idade, idade2)
idade<=idade2
ls()
remove(idade)
ls()
seq(1,10)
seq(1,10,2)
1:10
rep(idades, 10)
idades<-c(23,34,28)
rep(idades, 10)
cidades<-c("Salvador", "Recife", "Olinda")
rep(cidades, each=2)
rep(cidades, each=2)
rep(cidades, 2)
rep(cidades, c(3,5,7))
sample(2:50)
sample(2:50,4)
sample(1:60,4)
sample(1:60,6)
sample(1:60,6, replace = TRUE)
sample(1:60,6, replace = TRUE)
sample(1:60,6, replace = FALSE, decreasing = TRUE)
sort(sample(1:60,6, replace = FALSE), decreasing = TRUE)
sort(sample(1:60,6, replace = FALSE), decreasing = FALSE)
rank(sample(1:60,6, replace = TRUE))
numero <- sample(1:60,6, replace = TRUE)
numero
rank(numero)
vetor <- c(c(2,3), c(4,5,6))
vetor
vetor <- list(c(2,3), c(4,5,6))
vetor
vetor[1]
vetor[1][1]
vetor[1][2]
vetor[1][1]
vetor[[1]]
vetor[[1]][1]
vetor[[1]][2]
v1<-c(2,3,4)
v2<-c(3,6,7)
rbind(v1,v2)
cbind(v1,v2)
A<-rbind(v1,v2)
B<-cbind(v1,v2)
dim(A)
dim(B)
length(A)
v1<-c('recife', 'olinda', 'salvador')
v2<-c(23,45,56)
cbind(v1,v1)
cbind(v2,v1)
rbind(v2,v1)
matrix(0,2,4)
matrix('exemplo,3,5')
matrix('exemplo',3,5)
matrix(seq(1:7))
matrix(seq(1:9), nrow = 3, byrow = FALSE)
matrix(seq(1:9), nrow = 3, byrow = TRUE)
matrix(seq(1:9), ncol = 3, byrow = FALSE)
matrix(seq(1:10), nrow = 2, ncol = 5, byrow = FALSE)
matrix(c('a', 'b'))
matrix(c('a', 'b'), ncol=4, nrow = 3)
matrix
A<-matrix(4,5,6)
A
A<-matrix(1:20,5,6)
A
A[2,1]
A[3,]
A[,4]
A[1:3,2:5]
A[c(1,3,4), c(3,4)]
A[c(2,3),]
nrow(A)
ncol(A)
A<-matrix(1:20, 4, 5)
A[3,5]
A[3,5] <-90
A[,3]
A[,3] <-0
A[,3]
A[2,]
A[2,]<-100
A
v<-c(1:4)
A2<-cbind(A,v)
A2
ncol(A2)
A3<-rbind(A2,x)
x<-c(1:6)
A3<-rbind(A2,x)
A3
A2
A2[,-2] #remove segunda coluna
A2[-1,] #remove primeira linha
A2
A2[-1, -2] #remove primeira linha e segunda coluna
A<-matrix(0,5,5)
A
A+4
A-4
A<-matrix(10,5,5)
A
A+4
A-4
A*3
A*(-3)
A/5
A/8
A^2
sqrt(A)
log(A)
B<-matrix(2,5,5)
B
A+B
A-B
A*B
A%*%B
diag(A)
solve(A)
det(A)
det(B)
A<-matrix(1:25, 5, 5)
diag(A)
det(A)
A
diag(A)
det(A)
solve(A)
dim(A)
B<-A[,-3]
B<-A[,-3]
B
t(B)
A
image(A)
image(B)
A[,1]<-1000
image(A)
A
A[3,]<-300
image(A)
contour(A)
contour(B)
contour(A)
A
persp(A)
persp(B)
A<-matrix(0,3,3)
A
colunas<-c('idade', 'sexo', 'peso')
colunas<-c('idade', 'sexo', 'peso')
linhas<-c('marlos', 'josé', 'pedro')
A<-matrix(0,3,3, dimnames = list(linhas, colunas))
A
dimnames(A)
library(readr)
library(tools) #capitalize texto
getwd()
directory <- "/home/cleibson/projetos/opendata_aig_brazil/script"
setwd(directory)
oco <- read_delim("../data/all.csv", "~", escape_double = FALSE, trim_ws = TRUE)
attach(oco)
paleta_cores=c("rosybrown3","gray69","palegoldenrod","paleturquoise3","palegreen2")
dia_compilacao = paste("Dados compilados em ", format(dia_extracao[1], format="%d/%m/%Y"))
graficolargura=800
graficoaltura=450
graficolargura1=600
graficoaltura1=350
nomearquivo=paste("images/classificacao","001",".jpg",sep="_")
bmp(nomearquivo,width=graficolargura1,height=graficoaltura1)
barplot(table(ocorrencia_classificacao),
main = paste("Total de Ocorrências entre ",
substring(min(ocorrencia_dia), 1, 4),
"-",
substring(max(ocorrencia_dia), 1, 4)), #título do gráfico
col = rainbow(length(table(ocorrencia_classificacao))), #cores das barras
ylab = "Total de Ocorrências", #label do eixo y
cex.names = 0.8, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3,
space=0.5
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
ocorrencia_mes = substring(ocorrencia_dia, 6, 7)
ocorrencia_ano = substring(ocorrencia_dia, 1, 4)
temp_class = unique(ocorrencia_classificacao)
temp_ano = unique(ocorrencia_ano)
table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == 'ACIDENTE'))
table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == 'ACIDENTE' & ocorrencia_ano == '2006'))
sum(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == 'ACIDENTE' & ocorrencia_ano == '2006')))
for(i in temp_class){
nomearquivo = paste("images/por_mes_", tolower(i),".jpg", sep="")
bmp(nomearquivo,width=graficolargura1,height=graficoaltura1)
barplot(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i)),
main = paste("Total de ", toTitleCase(tolower(i)), "s", " por Mês entre ",
substring(min(ocorrencia_dia), 1, 4),
"-",
substring(max(ocorrencia_dia), 1, 4), sep=""), #título do gráfico
col = rep(rainbow(1), length(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i)))), #cores das barras
ylab = paste("Total de ", toTitleCase(tolower(i)), "s", sep=""), #label do eixo y
xlab = "Mês", #label do eixo x
cex.names = 0.8, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3, #largura das barras
space=0.5 #espaço entre as barras
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
for(j in temp_ano){
nomearquivo = paste("images/por_mes_", tolower(i), "_ano_", j, ".jpg", sep="")
bmp(nomearquivo,width=graficolargura1,height=graficoaltura1)
barplot(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i & ocorrencia_ano == j)),
main = paste("Total de ", toTitleCase(tolower(i)), "s", " por Mês no Ano de ", j, sep=""), #título do gráfico
col = rep(rainbow(1), length(table(subset(ocorrencia_mes, subset = ocorrencia_classificacao == i)))), #cores das barras
ylab = paste("Total de ", toTitleCase(tolower(i)), "s", sep=""), #label do eixo y
xlab = "Mês", #label do eixo x
cex.names = 0.8, #tamanho do texto dos eixos
axis.lty=1, #define padrão de linha do eixo x
las=1, #rotaciona labels eixo x
width=0.3, #largura das barras
space=0.5 #espaço entre as barras
)
mtext(dia_compilacao, side=1, line=4, cex=1)
dev.off()
}
}
ls
shape<-seq('round', 'oval', 'long')
shape<-seq(C('round', 'oval', 'long'), by = 4)
shape<-seq(C('round', 'oval', 'long'))
shape<-seq(c('round', 'oval', 'long'), by = 4)
shape<-rep(c('round', 'oval', 'long'), by = 4)
shape
shape<-rep(c('round', 'oval', 'long'), 4)
shape
pattern <- rep('pattern')
pattern
pattern <- rep('pattern', 3)
pattern
pattern <- rep(c('pattern', 'plain'), 2)
pattern
pattern <- rep(c('pattern', 'plain'), c(2))
pattern
pattern <- rep(c('pattern', 'plain'), c(3,2))
pattern
pattern <- rep(c('pattern', 'plain'), c(3,3))
pattern
rep(1:3, 2, each=4)
pattern <- rep(c('pattern', 'plain'), c(3,3), each=2)
pattern <- rep(c('pattern', 'plain'), 3, each=2)
pattern
pattern <- rep(c('pattern', 'plain'), 2, each=3)
pattern
shade<-rep(c('light','dark'),2,each=6)
shade
shade<-rep(c('light','dark'),1,each=6)
shade
count<-c(2,0,3,1,3,2,9,0,2,1,11,2)
count
table_91<-data.frame(shape,pattern,shade,count)
table_91
summary(table_91)
boxplot(count, shape)
boxplot(count ~ shape)
boxplot(count ~ pattern)
boxplot(count ~ shade)
A<-matrix(1:20, 4, 5)
A<-matrix(1:20, 4, 5)
B<-array(1:20, dim = c(4,5))
A
B
A<-array(1:20, dim = c(4,5,4))
C<-array(1:20, dim = c(4,5,4))
C
A<-matrix(1:20, 4, 5)
B<-array(1:20, dim = c(4,5))
A
B
C<-array(1:20, dim = c(4,5,4))
C
D<-array(A,B)
D<-array(c(A,B))
D
D<-array(c(A,B), dim = c(4,5))
D
D<-array(c(A,B), dim = c(4,5,2))
D
B<-array(10:30, dim = c(4,5))
A
B
C<-array(1:20, dim = c(4,5,4))
C
D<-array(c(A,B), dim = c(4,5,2))
D
E<-array("Recife", "Olinda", "Jaboatão", dim = c(3,4))
E<-array(c("Recife", "Olinda", "Jaboatão"), dim = c(3,4))
E
E<-array(c("Recife", "Olinda", "Jaboatão"), dim = c(3,4,3))
E
F<-array(c(vetor1, vetor2), c(3,4,2))
vetor1<-c(20,34,56)
vetor2<-c('André', 'Felipe', 'Maria', 'José')
F<-array(c(vetor1, vetor2), c(3,4,2))
F
v1<-c(40,300,150)
v2<-scan(5)
v2<-scan(n = 5)
G<-array(c(v1,v2,v3), dim = c(3,3,3) )
v3<-c('maria','josé')
G<-array(c(v1,v2,v3), dim = c(3,3,3) )
G
r.names<-c('marcos', 'joão', 'maria')
c.names<-c('gastos', 'lucros', 'despesas')
matrizes.names<-c('Janeiro', 'Fevereiro', 'Março')
H<-array(c(v1,v2,v3), dim = c(3,3,3), dimnames = list(r.names,c.names,matrizes.names))
H
dim(H)
length(H)
names(H)
G[2,3,4]
G[2,3,2]
G
H
H[2,3,2] #acessa elemento da linha 2, coluna 3, da matriz 2
despesas_joao <- H[2,3,2] #acessa elemento da linha 2, coluna 3, da matriz 2
H
despesas_joao <-H[2,3]
despesas_joao <-H[2,3,]
despesas_joao_fev
despesas_joao_fev <- H[2,3,2] #acessa elemento da linha 2, coluna 3, da matriz 2
despesas_joao_fev
despesas_joao <-H[2,3,]
despesas_joao
lucros_jan <- H[,2,]
lucros_jan
sum(lucros_jan)
H
H[,1,] <- 10
H
H[,3,1] <- seq(1,3)
H
sum(H)
sum(H[1,,])
H[3,,2] < c(230,430,330)
H
H[3,,2] < c(230,430,330)
H[3,,2] <- c(230,430,330)
H
H[,,1] <- matrix(1:9, ncol = 3)
H
H[,,2:3] <-matrix(10:19, nrow=3)
H
H[,,2:3] <-matrix(10:19, nrow=3)
H[,,2:3] <-matrix(10:18, nrow=3)
H
H
H[,,3] <- as.numeric(H[,,3])
H
H[,,3] <- is.numeric(H[,,3])
H
H[,,] <- seq(1:9)
H
H <- array(seq(1:9), dim = c(3,3,3), dimnames = list(r.names,c.names,matrizes.names))
H
H[,3,1] <- c(4,7,8)
H[,3,1] <- c(4,7,8)
H[,2,1] <- c(6,7,1)
H[,3,2] <- c(4,9,8)
H
mean(H[1,,])
mean(H[,3,3])
sum(H[,3,3])
apply(H)
apply(H, c(1), sum)
apply(H, c(1), sum) #por linha
apply(H, c(2), sum) #por coluna
apply(H, c(1), cos)
apply(H, c(1), sen)
apply(H, c(1), sin)
apply(H, c(1), mean)
apply(H[,2,], c(1), sum)
mean(H[,2,])
apply(H[,2,], c(2), sum)
mean(H[,2,])
apply(H, c(2), sum)
apply(H[1,,], c(2), sum)
apply(H[1,,], c(1), sum) #soma de todos os gastos de marcos por mes
apply(H[1,,], c(1), sum) #soma de todos os gastos de marcos por tipo
plot(H)
est_civil <- c('casado', 'casado', 'solteiro', 'casado', 'solteiro', 'outro')
a <- factor(est_civil)
a
a <- factor(est_civil, levels = c('solteiro', 'casado', 'outro'))
a
est_civil <- gl(4, 2, labels = c('solteiro', 'casado', 'divorciado', 'outro'))
est_civil
